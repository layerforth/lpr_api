# weights_path: can be .weights (openCV) or .pth (Pytorch)
# n_cpu: number of cpu workers, 0 means main thread

lpr:
  pad_x: 0.1
  pad_y: 0.1

plate_detector:
  model_cfg: data/yolov3_plate_191204.cfg
  weights_path: data/plate_191204.weights
  class_path: data/detector_classes.names
  conf_thres: 0.5
  nms_thres: 0.4
  # batch_size: 8
  n_cpu: 0
  img_size: 416
  pred_mode: cv2

plate_detector_trt:
  model_path: data/yolov4_plate-8_416_fp16.engine
  class_path: data/detector_classes.names
  n_classes: 1
  conf_thres: 0.5
  nms_thres: 0.4
  input_size: !!python/tuple [416, 416]
  max_batch_size: 8

segmentator:
  model_cfg: data/yolov3_char_seg_191219.cfg
  weights_path: data/char_seg_191219.weights
  class_path: data/segmentator_classes.names
  conf_thres: 0.5
  nms_thres: 0.4
  # batch_size: 8
  n_cpu: 0
  img_size: 416
  char_line_threshold: 0.5
  pred_mode: cv2

segmentator_trt:
  model_path: data/yolov4_seg-8_320_fp16.engine
  class_path: data/segmentator_classes.names
  n_classes: 1
  conf_thres: 0.5
  nms_thres: 0.4
  input_size: !!python/tuple [320, 320] # (h, w)
  max_batch_size: 8
  char_line_threshold: 0.5
  contrast: 3.5 # 0 to not add contrast

char_recognizer:
  model: resnext
  model_size: 50
  weights_path: data/resnext50-003-b8_32.pth
  inverse_char_dict: data/char_dict.yaml
  # conf_thres: 0.5
  img_size: 16
  
char_recognizer_trt:
  model_path: data/resnext50-003-b8_32.engine
  inverse_char_dict: data/inverse_char_dict.yaml
  input_size: !!python/tuple [32, 32]
  max_batch_size: 8